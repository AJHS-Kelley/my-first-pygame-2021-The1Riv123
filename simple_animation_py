#simple animation with pyGame, Jason Rivers, 12/08/21 2:14 PM, v0.6

import pygame, sys, time
from pygame.locals import *

# Setup pyGame
pygame.init()

# Setup the window
WINDOWWIDTH = 400
WINDOWHEIGHT = 400
windowSurface = pygame.dusplay.set_mode((WINDOWWIDTH, WINDOWHEIGHT), 0, 32)
pygame.display.set_caption('Animation Example!')

# Setup the direction varibles.
DOWNLEFT = 'downleft'
DOWNRIGHT = 'downright'
UPLEFT = 'upleft'
UPRIGHT = 'upright'

MOVESPEED = 4

# Setup color values
WHITE = (255, 255, 255)
RED = (255, 0, 0)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)

# Setup the box data
b1 = {'react':pygame.rect(300, 80, 50, 100),'color': RED 'dir':UPRIGHT}
b2 = {'react':pygame.rect(200, 200, 20, 20), 'color': GREEN, 'dir':UPLEFT}
b3 = {'react':pygame.rect(100, 150, 60, 60), 'color':BLUE, 'dir':DOWNLEFT}
boxes = [b1, b2, b3]

# Run the game loop.
while True: 
    # Check for QUIT event.
    for even in pygame.event.get():
        if event.type== QUIT:
            pygame.quit()
            sys.exit()

        windowSurface.fill(WHITE)

        for b in boxes:
            # move the box data structure
            if b['dir'].left == DOWNLEFT:
                b['rect'].left -= MOVESPEED
                b['rect'].top += MOVESPEED
            if b['dir'] ==DOWNRIGHT:
                b['rect'].left += MOVESPEED
                b['rect'].top += MOVESPEED
              if b['dir'] == UPLEFT:
                 b['rect'].left -= MOVESPEED
                b['rect'].top -= MOVESPEED
                if b['dir'] == UPRIGHT
                b['rect'].left += MOVESPEED
                b['rect'].top -= MOVESPEED

